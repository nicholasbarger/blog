{"id":"a-simple-tableless-form","title":"A Simple Tableless Form","description":"","link":"http://nicholasbarger.com/2009/06/22/a-simple-tableless-form/","pubDate":"2009-06-22T23:48:18.000Z","content":"<h2>Why Use CSS (A brief recap)</h2><p>By now, just about anyone who has worked on web-based development has heard the arguments against tables in HTML design.  Although the vast majority of websites in earlier web development were table based, times have changed and most web developers are coming over to the benefits of purely CSS based design.</p><p>There are of course many reasons for this change; namely the separation of page structure and visual aesthetics.  Software developers, above all others, should appreciate this singular advantage of using CSS based design over tables and fixed graphics within the HTML.</p><p>With a CSS based website or web application you gain the advantage of being able to quickly change the entire look of a website by simply changing an external CSS stylesheet (or collection of css stylesheets) and functionality of the webpage should stay in tact since the underlying HTML structure is unchanged.  Additionally, there are SEO advantages to using CSS and div’s versus tables and worse, nested tables.</p><h2>Common CSS Problem-Area: Forms</h2><p>So now that we briefly recapped the reasons why as well as a few significant advantages of using CSS, let’s discuss a common CSS problem area; forms.</p><p>We’ll use a very simple example which incorporates the majority of elements within a form.  The following code examples are written in good-old-fashioned HTML instead of ASP.NET and do not contain validation, ID’s, etc. like a production form would have:</p><img src=\"http://nbarger.files.wordpress.com/2010/01/form_screenshot.gif\" alt=\"A Basic Form Screenshot\" style=\"border:1px solid #000;\" /><p>The old way of doing this in HTML would look something like this:</p><div class=\"html_block\"><pre>&lt;html&gt;&lt;head&gt;&lt;title&gt;A Simple Table Form&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;A Simple Table Form&lt;/h1&gt;&lt;table&gt;\t&lt;tr&gt;\t\t&lt;td&gt;Name&lt;/td&gt;\t\t&lt;td colspan=\"5\"&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;Property Address&lt;/td&gt;\t\t&lt;td colspan=\"5\"&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;City&lt;/td&gt;\t\t&lt;td&gt;&lt;input type=\"text\" /&gt;&lt;/td&gt;\t\t&lt;td&gt;State&lt;/td&gt;\t\t&lt;td&gt;\t\t\t&lt;select&gt;\t\t\t\t&lt;option value=\"FL\"&gt;FL&lt;/option&gt;\t\t\t&lt;/select&gt;\t\t&lt;/td&gt;\t\t&lt;td&gt;Zip&lt;/td&gt;\t\t&lt;td&gt;&lt;input type=\"text\" size=\"14\" /&gt;&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;Email&lt;/td&gt;\t\t&lt;td colspan=\"5\"&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td colspan=\"6\"&gt;Message&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td colspan=\"6\"&gt;&lt;textarea cols=\"65\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td colspan=\"6\"&gt;&lt;input type=\"button\" value=\"Submit\" /&gt;&lt;/td&gt;\t&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre></div><p>Let’s take a look at one approach without tables and using CSS styles (the CSS is incorporated into the head of the HTML for demonstration purposes):</p><div class=\"html_block\"><pre>&lt;html&gt;&lt;head&gt;&lt;title&gt;A Simple Tableless Form&lt;/title&gt;&lt;style&gt;.form{}.form span{float: left;width: 120px;clear: both;}.form .normal{width: 120px;float: none;}.form .short{width: 50px;}.form input, .form select, .form textarea{margin-top: 2px;margin-bottom: 2px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"form\"&gt;&lt;h1&gt;A Simple Tableless Form&lt;/h1&gt;&lt;span&gt;Name&lt;/span&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;br /&gt;&lt;span&gt;Property Address&lt;/span&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;br /&gt;&lt;span&gt;City&lt;/span&gt;&lt;input type=\"text\" /&gt;&lt;span class=\"normal short\"&gt;State&lt;/span&gt;&lt;select&gt;\t&lt;option value=\"FL\"&gt;FL&lt;/option&gt;&lt;/select&gt;&lt;span class=\"normal short\"&gt;Zip&lt;/span&gt;&lt;input type=\"text\" size=\"14\" /&gt;&lt;br /&gt;&lt;span&gt;Email&lt;/span&gt;&lt;input type=\"text\" size=\"65\" /&gt;&lt;br /&gt;&lt;span&gt;Message&lt;/span&gt;&lt;br /&gt;&lt;textarea cols=\"65\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;br /&gt;&lt;input type=\"button\" value=\"Submit\" /&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</pre></div><p>In production, don't forget to move the CSS to an external file – which is usually cached by the browser after initially being downloaded.  This improves download speed and code maintenance.</p><p>The key is the form class and styles within the form class.  all <span>'s are treated special, so they float left and default to a specified width (which can change based on the form).  This lines up the input and the input tag's vertically so the form looks clean.  I generally also include a short style for closer width when necessary.  The normal style is to allow non-floated spans for laying form elements out horizontally.  Finally, I've added some additional spacing to form input controls to make the form easier to read.</p><h3>A Nice Advantage for CSS Forms</h3><p>To demonstrate one final advantage let’s take the following scenario: you need to be able to hide or show the state and state dropdown from codebehind, a common example when working with ASP.NET.  With the CSS version, you can simply wrap the state span and select input with an ASP Panel and turn the visibility on/off.  With a table, this would break the table structure if you remove a column, and if not, you are left with a large gap.</p><p>I hope this helps in your next HTML form!</p>"}