{"id":"catching-up-to-mvc","title":"Catching up to MVC","description":"","link":"http://nicholasbarger.com/2012/01/29/catching-up-to-mvc/","pubDate":"2012-01-29T03:46:09.000Z","content":"<p>Contrary to my nature, I’ve been reluctant to adopt the “latest and greatest” from Microsoft for the past twelve months or so.  A good deal of my tech lag time has been due to my primary position leading an Oracle Enterprise Business Suite (EBS) project which has put me in the world of red, not blue.  It’s been the unfamiliar - Oracle DB, Jdeveloper, and putty - that I've been working in more than anything made in Redmond lately.  However, there is an equally valid reason – I've lost a bit of my Microsoft faith over the countless hours of podcasts, reading articles, and attending events which had left me completely unsure what Microsoft was doing (and questioning whether Microsoft knew as well).  For quite a while it felt as though everything Microsoft created was tossed into the eco-system somewhat half-baked and what received the most buzz stuck.  Perhaps this is Microsoft adopting some of the open source mentality that has been so hard on Microsoft in the past; perhaps it was simply to create a competitive nature internally at Microsoft; but to some critics, and even a handful of die-hard developers like myself, it seemed scattered and without direction. </p><p>There’s a bit more of a problem that I now understand more fully than when I was younger; time is not an infinite resource.  Before I would jump whole-heartedly into a new technology learning with vigorous disregard of whether that technology would rise to the top or fall by the wayside.  The cost was minimal; it only meant time away from things I probably shouldn’t be doing anyway. </p><p>Now that I have a daughter (as well as another on the way) and other family demands, I have to choose very carefully what my training time can go to.  Should the focus be MVC, WP7, Silverlight, BizTalk (or gasp, Oracle SOA Suite), Entity Framework, jQuery, HTML5/CSS3, Azure, Denali, Kinect SDK, or any of the now vast array of Microsoft offerings available to developers?</p><p>So, as I’ve found myself occupied in other technologies, I rode the fence to see what shook out.  It looks like Microsoft is finding their groove again and it’s time to brush aside the fallout and introduce the winner(s).</p><h2>Welcome MVC to My Toolbox</h2><p>As most of you know, MVC as a pattern has been around for quite a while.  It is this reason that I originally waited to see if Microsoft’s implementation would survive or if the community would look to past MVC frameworks and decide to go back to something from the open source community or an established Java MVC implementation that would be ported over.</p><p>Obviously, that does not appear to be the case and Microsoft’s MVC implementation has been a huge success.</p><p>So now it’s time to get to work.  I’ll be periodically posting about my learning process with MVC if any other developers are interested.  There is a huge list of resources now available for MVC and as I post (or you comment), I will try and steer developers to what I consider the most useful.</p><h3>Disclaimer and decisions made about the example material</h3><p>Please note that there is still a plethora of examples showing simple MVC apps which I am intentionally choosing to not use in these blog posts.  I am starting with a quite large project to accurately compare MVC to “the real world of enterprise applications”.  I’ve also decided to employ logic and models via a service layer instead of directly in the MVC project.  P.S. – way to go MVC for allowing this, it should be played up more in examples!</p><p>Also, in case you didn’t pick up on this earlier, but this is a learning journey for me with MVC – I am by no means an expert… yet.</p><p>Without further ado, here are my notes from the first foray into MVC with an enterprise application.</p><h2>Project Orange (the anti-apple)</h2><p>It’s not important what this project is, but it is intended to have multiple tiers where the web tier will be MVC.  Let’s look at the setup of the projects:</p><img src=\"http://nbarger.files.wordpress.com/2012/01/projectorange_projects.jpg\" alt=\"Project Orange Projects\" /><p>BusinessDataLogic is a combined BLL and DAL using entity framework.<br />Models are the business entities and DTO's.<br />Services are WCF services which wrap the business logic and expose DTO's.<br />Utilities are just helper classes that are common throughout the tiers (extension methods, etc.)<br />Web is MVC.</p><h3>MVC Presentation Tier</h3><p>Let’s take a closer look at the web application and the asset structure:</p><img src=\"http://nbarger.files.wordpress.com/2012/01/projectorange_mvc.jpg\" alt=\"Project Orange MVC\" /><p>As you can see, I’ve added a service reference for my WCF Inventory service.  I’ve also added an ItemController and a corresponding View directory for Item.</p><p>I’ve added one new method within the ItemController for searching:</p><div class=\"c_code\"><pre>//// GET: /Item/Search/hadpublic ActionResult Search(string text){   var client = new InventoryService.InventoryClient();   var items = client.SearchItems(1, 1, text);   return View(items);}</pre></div><p>I’ve created a Search view which was auto-scaffolded based on the strongly typed model.  The scaffolding is a nice feature and I can see this being extensible in the future.</p><p>Two things that I did get tripped up on for just a short while which required some trial and error was that I needed to create a new routing rule in global.asax to handle my Search action url format:</p><div id=\"c_code\"><pre>//Search Itemroutes.MapRoute(   \"SearchItem\",   \"{controller}/{action}/{text}\",   new { controller = \"Item\", action = \"Search\", text = UrlParameter.Optional });</pre></div><p>I also discovered that _Layout.cshtml is essentially the masterpage (called a layout in MVC terms) and is auto-loaded by default from _ViewStart.cshtml.</p><p>That’s actually not a bad start for just opening up a project template and getting going, the wizard-style adding of files was very intuitive.  Now it’s on to the resources to start learning more.</p><h2>What Resources I’m Using This Week</h2><p><a href=\"http://www.pluralsight-training.net/microsoft/\" target=\"_blank\">Pluralsight</a>: I’m finishing up the free MVC video on ASP.net and like the quality so much I’ve requested for our entire team to purchase seats through work.  The catalog is certainly Microsoft-based but also has some “fringe” technology courses as well.</p><i>I'm not paid for any recommendation or traffic to Pluralsight, I just like their material.</i><p><strong>HTML5 by Bruce Lawson and Remy Sharp</strong>:  In line with using MVC, I think this is also an appropriate time to embrace HTML5 (as the rest of the world has gone crazy over it) as some of the HTML generated appears to be doctype’d for HTML5 in MVC as well now.<i>I did enroll in Amazon's referral program, so there is a slight compensation for purchasing the book after clicking the image below.</i><a href=\"http://www.amazon.com/gp/product/0321784421/ref=as_li_ss_il?ie=UTF8&amp;tag=nicbarsblo-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0321784421\"><img border=\"0\" src=\"http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&amp;Format=_SL110_&amp;ASIN=0321784421&amp;MarketPlace=US&amp;ID=AsinImage&amp;WS=1&amp;tag=nicbarsblo-20&amp;ServiceVersion=20070822\"></a><img src=\"http://www.assoc-amazon.com/e/ir?t=nicbarsblo-20&amp;l=as2&amp;o=1&amp;a=0321784421\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none!important;margin:0!important;\" />"}