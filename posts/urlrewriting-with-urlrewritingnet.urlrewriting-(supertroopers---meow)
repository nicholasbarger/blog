{"id":"urlrewriting-with-urlrewritingnet.urlrewriting-(supertroopers---meow)","title":"UrlRewriting with UrlRewritingNet . UrlRewriting (Supertroopers - meow)","description":"","link":"http://nicholasbarger.com/2008/06/16/urlrewriting-with-urlrewritingnet-urlrewriting-supertroopers-meow/","pubDate":"2008-06-16T13:53:34.000Z","content":"<p>The title of this post/article probably doesn't make sense to most people.  In my head I was trying to come up with a title and nearly every word was <i><b>UrlRewriting</b></i>; it got me thinking of the scene in <i>Supertroopers</i> where they see how many times they can say <i>meow</i> while they pull someone over.</p>    <p>Ok, enough of that train of thought - what we want to get to is how to do UrlRewriting, which is of course, how to convert url's such as <b>http://www.nicholasbarger.com/default.aspx?blogid=12092</b> to <b>http://www.nicholasbarger.com/11-UrlRewriting_with_UrlRewritingNetUrlRewriting_(Supertroopers_-_\"meow\")</b>.  But wait!  That URL is much longer and still ambiguous, why would I want to do this?</p>    <p>There are really two main advantages.  First, it's slightly easier to bookmark and recall because it is more text based rather than numeric, but the primary reason is because of search engine visibility.  Search engine results are a bit better when the actual name of the webpage relates to the content found on the page; similar to the title of the page matching keywords for the page content.</p>        <h2>What We Need</h2>    <p>To get started, there are several ways to use UrlRewriting; you can write your own rewriting engine, you can use MVC (includes a routing engine, <a href=\"http://weblogs.asp.net/scottgu/archive/2007/10/14/asp-net-mvc-framework.aspx\" target=\"_blank\">see article from Scott Guthrie</a>), or you can use one of the prewritten UrlRewriting components that are already out there and have been time-tested.  I picked up one several years ago which I use for many of my projects that require UrlRewriting which will be what I use to demo for this posting.  You can find it at the following address (<a href=\"http://www.urlrewriting.net/\" target=\"_blank\">http://www.urlrewriting.net/</a>)</p>        <h2>Barebones Setup</h2>    <p>I'm sure there are detailed directions in the installation packet that you download, but here is a quick step-by-step for barebones installation:</p>    <ol>        <li>Reference the UrlRewritingNet.UrlRewrite.dll in your project.</li>        <li>            <p>Add the following in your webconfig file in the \"&lt;configSections&gt;&lt;/configSections&gt;\":</p>            <div class=\"vb_block\">            <pre>&lt;section name=\"urlrewritingnet\" requirePermission=\"false\" type=\"UrlRewritingNet.Configuration.UrlRewriteSection, UrlRewritingNet.UrlRewriter\" /&gt;</pre></div>        </li>        <li>            <p>Add the following in your webconfig file in the \"&lt;configuration&gt;&lt;/configuration&gt;\":</p>            <i>Note: A sample rule is included which I will explain how to modify and create your own rules for UrlRewriting.</i>            <div class=\"vb_block\">            <pre>&lt;urlrewritingnet    rewriteOnlyVirtualUrls=\"true\"    contextItemsPrefix=\"QueryString\"    defaultPage = \"default.aspx\"    defaultProvider=\"RegEx\"    xmlns=\"http://www.urlrewriting.net/schemas/config/2006/07\" &gt;&lt;rewrites&gt;\t&lt;add name=\"blogpost\" virtualUrl=\"^~/([0-9]+)-(.*)\"            \t   rewriteUrlParameter=\"ExcludeFromClientQueryString\" \t   destinationUrl=\"~/default.aspx?blogid=$1\"\t   ignoreCase=\"true\" /&gt;&lt;/rewrites&gt;&lt;/urlrewritingnet&gt;</pre>            </div>        </li>        <li>            <p>Add the following in your webconfig file in the \"&lt;httpModules&gt;&lt;/httpModules&gt;\":</p>            <div class=\"vb_block\">            <pre>&lt;add name=\"UrlRewriteModule\" type=\"UrlRewritingNet.Web.UrlRewriteModule, UrlRewritingNet.UrlRewriter\" /&gt;</pre></div>        </li>    </ol>        <h2>Now We're Set, How Do You Use It?</h2>    <p>The UrlRewriting engine looks for a URL that matches regular expression based rules you define in the webconfig.  It then matches the parameters and reforms them into the destination URL in the specified format.</p>    <p>All you have to do is use links throughout your pages that match the virtual URL rule you specified.</p>        <h3>Example:</h3>    <div class=\"html_block\"><pre>&lt;a href=\"http://www.nicholasbarger.com/11-UrlRewriting_with_UrlRewritingNetUrlRewriting_(Supertroopers_-_meow)\"&gt;View Article&lt;/a&gt;</pre></div>    <p>This URL doesn't actually exist, but the UrlRewriting engine reads it and redirects to the appropriate URL (http://www.nicholasbarger.com/default.aspx?blogid=11)</p>        <h2>Creating Your Own Rules</h2>    <p>To really get good at this, you need to be a little familiar with regular expressions.  I'll be honest, I never remember off the top of my head regular expressions so I tend to Google a primer on it whenever I sit down and work with these (or lookup old examples for basic pattern matching).</p>    <p>You may want to do the same, <a href=\"http://www.google.com/search?source=ig&amp;hl=en&amp;rlz=1G1GGLQ_ENUS255&amp;=&amp;q=regular+expressions&amp;btnG=Google+Search\" target=\"_blank\">click here</a> to start searching!</p>    <p>Remember, the <b>virtualUrl</b> is the address that you will type into your links, it's also what the user will see in the address bar.  The <b>destinationUrl</b> is where the real page lies.  You can use <b>$</b> and then the corresponding number (in order of regular expression combinations) to retrieve the value the regular expression is matching.  In my case, I'm getting the blogid which i've placed as the prefix to the post/article title.</p>        <p>Good luck with UrlRewriting and play around a bit to discover some of the benefits of using UrlRewriting.</p>    <i>Note: Be sure to be careful when using <b>/</b>, slashing characters in your url's, this does denote you are in a directory higher/lower than you actually may be; so images or other references may break if using relative paths.</i>"}