{"id":"vs2010-schema-compare-order-of-operations","title":"VS2010 Schema Compare Order of Operations","description":"","link":"http://nicholasbarger.com/2010/10/06/vs2010-schema-compare-order-of-operations/","pubDate":"2010-10-06T18:41:49.000Z","content":"<p>Take the formulas 1 + 2 x 3 and (1 + 2) x 3;  two completely different answers.  In the case of Visual Studio Schema Compare, what I would assume the order of operations to be for updating a database would be to first update tables, then updates views (which could be dependent on the tables), and finally update stored procedures (which could be dependent on either the tables or the views).  It seems that Schema Compare attempts to do stored procedures first, and when it comes across a reference to a database object that does not yet exist, it dies out with the following error message.</p><img src=\"http://nbarger.files.wordpress.com/2010/10/schemacomparesproc.jpg\" alt=\"Order of Operations\" /><p>In this example, we have two tables which have been created and the corresponding Create and Update stored procedures which interact with the new tables.  This is a pretty basic example of typical database schema updates and one I would think Schema Compare could figure out.</p><p>The current workaround I have found for this is to:</p><ol><li>Mark all Stored Procedures as Skip All.</li><li>Run Write Updates.</li><li>Refresh the compare.</li><li>Mark all stored procedures as Create/Update All.</li><li>Run Write Updates.</li></ol><p>A few extra steps, but it seems to work every time.  Hopefully this is something that Microsoft will correct or provide some information as to why the order of operations proceeds with stored procedures first.</p>"}